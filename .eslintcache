[{"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\index.js":"1","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\contact.js":"2","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\userProfile.js":"3","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\screens\\App.js":"4","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\firebase.js":"5","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\screens\\Forms.js":"6","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\toDoList.js":"7","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\toDo.js":"8","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\userPhoto.js":"9"},{"size":227,"mtime":1611343717196,"results":"10","hashOfConfig":"11"},{"size":1677,"mtime":1611672554134,"results":"12","hashOfConfig":"11"},{"size":2867,"mtime":1612441167044,"results":"13","hashOfConfig":"11"},{"size":168,"mtime":1611672870734,"results":"14","hashOfConfig":"11"},{"size":624,"mtime":1611673150175,"results":"15","hashOfConfig":"11"},{"size":678,"mtime":1615035395237,"results":"16","hashOfConfig":"11"},{"size":1511,"mtime":1611852064276,"results":"17","hashOfConfig":"11"},{"size":3976,"mtime":1612037429168,"results":"18","hashOfConfig":"11"},{"size":1777,"mtime":1612441050581,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e6i6b0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\index.js",[],["42","43"],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\contact.js",[],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\userProfile.js",[],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\screens\\App.js",[],["44","45"],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\firebase.js",[],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\screens\\Forms.js",[],"C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\toDoList.js",["46","47"],"import React, { useState, useEffect } from 'react';\r\nimport { dataBase } from '../firebase';\r\n\r\n\r\n\r\nconst ToDoList = () => {\r\n    const [task, setTask] = useState('');\r\n    \r\n    const handleOnChange = (event) => {\r\n        setTask(event.target.value);\r\n    }\r\n\r\n    const handleOnClick = () => {\r\n        dataBase.collection('todolist')\r\n        .add({\r\n            task,\r\n            complete: false,\r\n        })\r\n        .then(() => {\r\n            alert('Task Created!');\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    \r\n    const [toDoList, setToDoList] = useState();\r\n\r\n    useEffect(() => {\r\n      const toDoRef = dataBase.collection(\"todolist\").onSnapshot((snap) => {\r\n          const list = []\r\n          snap.forEach((document) => list.push(document.data()))\r\n          setToDoList(list)\r\n      })      \r\n        console.log(toDoList);\r\n        \r\n    },[]) \r\n    \r\n\r\n    return(\r\n        <div className=\"wrap-page\">\r\n        <form className=\"page-form\" >\r\n            <h1 className=\"form-title p-b-32\">To Do List</h1>\r\n            <br></br>   \r\n            <label className=\"txt\">Task Description</label>\r\n            <input class=\"input1\" type=\"text\" placeholder=\"Task Description\" \r\n                onChange={handleOnChange}/>\r\n            <br></br>\r\n            <button type=\"submit\"\r\n                onClick={handleOnClick}>Add</button>\r\n        </form>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\toDo.js",["48"],"import React from 'react';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        newItem: \"\",\r\n        list: []\r\n      };\r\n    }\r\n  \r\n    //incorporating local storage \r\n    componentDidMount() {\r\n      this.hydrateStateWithLocalStorage();\r\n  \r\n      // add event listener to save state to localStorage\r\n      // when user leaves/refreshes the page\r\n      window.addEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      window.removeEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n  \r\n      // saves if component has a chance to unmount\r\n      this.saveStateToLocalStorage();\r\n    }\r\n  \r\n    hydrateStateWithLocalStorage() {\r\n      // for all items in state\r\n      for (let key in this.state) {\r\n        // if the key exists in localStorage\r\n        if (localStorage.hasOwnProperty(key)) {\r\n          // get the key's value from localStorage\r\n          let value = localStorage.getItem(key);\r\n  \r\n          // parse the localStorage string and setState\r\n          try {\r\n            value = JSON.parse(value);\r\n            this.setState({ [key]: value });\r\n          } catch (e) {\r\n            // handle empty string\r\n            this.setState({ [key]: value });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    saveStateToLocalStorage() {\r\n      // for every item in React state\r\n      for (let key in this.state) {\r\n        // save to localStorage\r\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n      }\r\n    }\r\n  \r\n    updateInput(key, value) {\r\n      // update react state\r\n      this.setState({ [key]: value });\r\n    }\r\n  \r\n    addItem() {\r\n      // create a new item with unique id\r\n      const newItem = {\r\n        id: 1 + Math.random(),\r\n        value: this.state.newItem.slice()\r\n   \r\n      };\r\n  \r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n  \r\n      // add the new item to the list\r\n      list.push(newItem);\r\n  \r\n      // update state with new list, reset the new item input\r\n      this.setState({\r\n        list,\r\n        newItem: \"\"\r\n      });\r\n    }\r\n  \r\n    deleteItem(id) {\r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n      // filter out the item being deleted\r\n      const updatedList = list.filter(item => item.id !== id);\r\n  \r\n      this.setState({ list: updatedList });\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n  \r\n        <h1 className=\"app-title\">MY LIST</h1>\r\n          \r\n          <div className=\"container\">\r\n          <div\r\n            style={{\r\n              padding: 30,\r\n              textAlign: \"left\",\r\n              maxWidth: 500,\r\n              margin: \"auto\"\r\n            }}\r\n          >\r\n            Add an Item...\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type item here\"\r\n              value={this.state.newItem}\r\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n            />\r\n            <button\r\n              className=\"add-btn btn-floating\"\r\n              onClick={() => this.addItem()}\r\n              disabled={!this.state.newItem.length}\r\n            >\r\n              <i class=\"material-icons\"> + </i>\r\n            </button>\r\n            <br /> <br />\r\n            <ul>\r\n              {this.state.list.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    {item.value}\r\n                    <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\r\n                      <i class=\"material-icons\">x</i>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  //ReactDOM.render(<App />, document.getElementById('root'));","C:\\Users\\nycol\\Documents\\GitHub\\forms-react-firebase\\src\\components\\userPhoto.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":31,"column":13,"nodeType":"57","messageId":"58","endLine":31,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":38,"column":7,"nodeType":"61","endLine":38,"endColumn":9,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":3,"column":7,"nodeType":"57","messageId":"58","endLine":3,"endColumn":10},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'toDoRef' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toDoList'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'App' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [toDoList]",{"range":"69","text":"70"},[914,916],"[toDoList]"]